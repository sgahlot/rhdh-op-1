---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rhdh-config-main
data:
  app-config.main.yml: |
    app:
      title: "RHDH AppEng Demo"
      baseUrl: ${HOST_URL}
      branding:
        theme:
          light:
            # primaryColor: '#38be8b'
            headerColor1: 'hsl(204 100% 71%)'
            headerColor2: 'color(a98-rgb 1 0 0)'
          dark:
            # primaryColor: '#ab75cf'
            headerColor1: '#0000d0'
            headerColor2: 'rgb(255 246 140)'
      
    backend:
      baseUrl: "${HOST_URL}"
      cors:
        origin: "${HOST_URL}"
        methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
      auth:
        keys:
          - secret: "${BACKEND_SECRET}"
    signInPage: github
    auth:
      environment: development
      session:
       secret: ${AUTH_SESSION_SECRET}
      providers:
        github:
          development:
            clientId: ${AUTH_GITHUB_CLIENT_ID}
            clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
        gitlab:
          development:
            clientId: ${AUTH_GITLAB_CLIENT_ID}
            clientSecret: ${AUTH_GITLAB_CLIENT_SECRET}
            audience: https://${GITLAB_HOST}
        oidc:
          development:
            metadataUrl: ${AUTH_OIDC_METADATA_URL}
            clientId: ${AUTH_OIDC_CLIENT_ID}
            clientSecret: ${AUTH_OIDC_CLIENT_SECRET}
            propmt: auto
            # callbackUrl: "${HOST}/api/auth/oidc/handler/frame"
    integrations:
      github:
        - host: github.com
          token: ${GITHUB_TOKEN}

      # gitlab:
      #   - apiBaseUrl: https://${GITLAB_HOST}/api/v4
      #     baseUrl: https://${GITLAB_HOST}
      #     host: ${GITLAB_HOST}
      #     token: ${GITLAB_TOKEN}

    # integrations:
    #   gitlab:
    #     - host: https://gitlab.cee.redhat.com

    # catalog:
    #   providers:
    #     keycloakOrg:
    #       default:
    #         baseUrl: ${KEYCLOAK_BASE_URL}
    #         loginRealm: ${KEYCLOAK_LOGIN_REALM}
    #         realm: ${KEYCLOAK_REALM}
    #         clientId: ${KEYCLOAK_CLIENT_ID}
    #         clientSecret: ${KEYCLOAK_CLIENT_SECRET}
    #         schedule:
    #           frequency: { minutes: 1 }
    #           timeout: { minutes: 1 }
    #           initialDelay: { seconds: 15 }
    # 
    # argocd:
    #   waitCycles: 25
    #   appLocatorMethods:
    #     - type: 'config'
    #       instances:
    #         - name: argocd1
    #           url: https://openshift-gitops-server-openshift-gitops.apps.rhdh-dev01.kni.syseng.devcluster.openshift.com
    #           username: ${ARGOCD_ADMIN_USER}
    #           password: ${ARGOCD_ADMIN_PASSWORD}



---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rhdh-config-catalog
data:
  app-config.catalog.yml: |

    catalog:
      rules:
        - allow: [Component, System, Group, Resource, Location, Template, API, User, Domain]

      locations:
        # Catalog and API entries - Janus entities
        - type: url
          target: https://github.com/janus-idp/backstage-showcase/blob/main/catalog-entities/all.yaml

        # All the templates (shows up in Create...) - Red Hat Developer Hub Software Templates location
        - type: url
          target: https://github.com/redhat-developer/red-hat-developer-hub-software-templates/blob/main/templates.yaml

        # ODO template for picking up Devfile stack
        #   (ODO == fast, iterative CLI tool for container based app dev)
        - type: url
          target: https://github.com/ododev/odo-backstage-software-template/blob/main/template.yaml


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rhdh-config-rbac
data:
  rhdh-config-rbac.yaml: |
    permission:
      enabled: true
      rbac:
        policies-csv-file: ./rbac-policy.csv
        admin:
          users:
            - name: user:default/sgahlot
            # - name: group:default/admins


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rhdh-config-rbac-policy
data:
  rbac-policy.csv: |
    p, role:default/team-x, catalog-entity, read, allow
    p, role:default/team-x, catalog.entity, create, allow
    p, role:default/team-x, catalog.entity, read, allow
    p, role:default/team-x, catalog.entity, delete, allow
    p, role:default/team-x, catalog.entity, update, allow

    p, role:default/team-x, catalog.location, create, allow
    p, role:default/team-x, catalog.location, read, allow

    p, role:default/team-x, policy-entity, create, allow
    p, role:default/team-x, policy-entity, read, allow
    p, role:default/team-x, policy-entity, delete, allow

    p, role:default/team-x, scaffolder.action, read, allow
    p, role:default/team-x, scaffolder.action, create, allow

    g, user:default/sgahlot, role:default/team-x


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rhdh-config-dynamic-plugins
data:
  rhdh-config.dynamic-plugins.yaml: |
    includes:
      - dynamic-plugins.default.yaml
    plugins:
      - package: './dynamic-plugins/dist/janus-idp-backstage-plugin-rbac'
        disabled: true
      - package: './dynamic-plugins/dist/backstage-plugin-techdocs'
        disabled: true
      - package: './dynamic-plugins/dist/backstage-plugin-techdocs-backend-dynamic'
        disabled: true
      - package: 'http://plugin-registry:8080/devquote-wrapper-0.1.0.tgz'
        disabled: true
        integrity: ''
        pluginConfig:
          dynamicPlugins:
            frontend:
              test-rhdh-devquote-plugin:
                dynamicRoutes:
                  - importName: DevQuote
                    menuItem:
                      text: Quotes
                    path: /quote
      - package: 'http://plugin-registry:8080/chatgpt-wrapper-0.1.0.tgz'
        disabled: true
        integrity: ''
        pluginConfig:
          dynamicPlugins:
            frontend:
              test-chatgpt-plugin-wrapper:
                dynamicRoutes:
                  - importName: ChatGPTFrontendPage
                    menuItem:
                      text: ChatGPT
                    path: /chatgpt

      # Badges plugin
      - package: 'http://plugin-registry:8080/badges-frontend-wrapper-0.1.0.tgz'
        disabled: true
        integrity: ''
      - package: 'http://plugin-registry:8080/badges-backend-wrapper-dynamic-0.1.0.tgz'
        disabled: true
        integrity: ''

      # ADR plugin
      - package: 'http://plugin-registry:8080/adr-plugin-wrapper-0.1.0.tgz'
        disabled: true
        integrity: ''
        pluginConfig:
          dynamicPlugins:
            frontend:
              adr-wrapper:
                mountPoints:
                  - mountPoint: entity.page.overview/cards
                    importName: EntityAdrContent
                    config:
                      layout:
                        gridColumn: "1 / -1"
      - package: 'http://plugin-registry:8080/adr-backend-plugin-wrapper-dynamic-0.1.0.tgz'
        disabled: true
        integrity: ''

